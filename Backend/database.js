import dotenv from 'dotenv';
dotenv.config();
import mongoose from "mongoose";
import {config} from "./src/config.js";

// üÜï IMPORTAR SERVICIO DE AUTO-ACTUALIZACI√ìN
import autoUpdateService from './src/services/autoUpdateService.js';

const URI = config.db.URI;

mongoose.connect(URI);

const connection = mongoose.connection;

connection.once("open", () => {
  console.log("DB conectada");
  
  // üöÄ INICIALIZAR SERVICIO DE AUTO-ACTUALIZACI√ìN DESPU√âS DE CONECTAR DB
  setTimeout(() => {
    try {
      console.log('üîÑ Iniciando servicio de actualizaci√≥n autom√°tica...');
      autoUpdateService.start();
      console.log('‚úÖ Servicio de auto-actualizaci√≥n iniciado correctamente');
    } catch (error) {
      console.error('‚ùå Error iniciando servicio de auto-actualizaci√≥n:', error);
    }
  }, 3000); // 3 segundos de delay para asegurar que la DB est√© completamente lista
});

connection.on("disconnected", () => {
  console.log("DB is desconectada");
  
  // üõë DETENER SERVICIO CUANDO SE DESCONECTE LA DB
  if (autoUpdateService) {
    console.log('‚èπÔ∏è Deteniendo servicio de auto-actualizaci√≥n...');
    autoUpdateService.stop();
  }
});

connection.on("error", (error) => {
  console.log("error encontrado" + error);
  
  // üõë DETENER SERVICIO EN CASO DE ERROR
  if (autoUpdateService) {
    autoUpdateService.stop();
  }
});

// üõë Manejo de cierre graceful del proceso
process.on('SIGINT', async () => {
  console.log('üõë SIGINT recibido. Cerrando aplicaci√≥n...');
  
  try {
    // Detener servicio de auto-actualizaci√≥n
    if (autoUpdateService) {
      autoUpdateService.stop();
    }
    
    // ‚úÖ CORRECCI√ìN: Cerrar conexi√≥n SIN callback
    await mongoose.connection.close();
    console.log('‚úÖ Conexi√≥n a MongoDB cerrada');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Error cerrando conexi√≥n:', error);
    process.exit(1);
  }
});

process.on('SIGTERM', async () => {
  console.log('üõë SIGTERM recibido. Cerrando aplicaci√≥n...');
  
  try {
    if (autoUpdateService) {
      autoUpdateService.stop();
    }
    
    // ‚úÖ CORRECCI√ìN: Cerrar conexi√≥n SIN callback
    await mongoose.connection.close();
    console.log('‚úÖ Conexi√≥n a MongoDB cerrada');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå Error cerrando conexi√≥n:', error);
    process.exit(1);
  }
});